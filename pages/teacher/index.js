import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useState, useEffect, useContext } from 'react'
import axios from 'axios'

import { AuthContext } from '../../contexts/Auth.Context'
import { ClassroomsContext } from '../../contexts/Classrooms.Context'

const TeacherHome = () => {
    const router = useRouter()
    const { auth, setAuth, getAccessToken } = useContext(AuthContext)
    const { classrooms, setClassrooms } = useContext(ClassroomsContext)

    const [formName, setFormName] = useState()
    const [formStudents, setFormStudents] = useState(0)

    useEffect(() => {
        // Get classrooms
        if (auth.tokens) {
            getAccessToken().then((accessToken) => {
                axios.get(process.env.NEXT_PUBLIC_BACKEND_HTTP_BASE+'core/classrooms/', {
                    headers: {'Authorization': 'Bearer '+accessToken},
                })
                .then(res => {
                    setClassrooms(res.data)
                })
                .catch(res => {
                    console.log(res)
                })
            })
        }
    }, [auth.tokens])

    const createClass = () => {
        getAccessToken().then((accessToken) => {
            axios.post(process.env.NEXT_PUBLIC_BACKEND_HTTP_BASE+'core/classrooms/', {
                "name": formName, "no_of_students": parseInt(formStudents)
            }, {
                headers: {'Authorization': 'Bearer '+accessToken},
            })
            .then(res => {
                let classroom = res.data
                setClassrooms([...classrooms, classroom])
                router.push('/teacher/class/'+classroom.code)
            })
            .catch(res => {
                console.log(res)
            })
        })
    }

    return (
        <div>
            <Head>
                <title>Teacher | LMS</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="mt-8 mx-8">
                <h1 className="text-5xl">Teacher Dashboard</h1>

                <h2 className="text-3xl mt-8 mb-4">Classrooms</h2>
                { classrooms && classrooms.map((cr, i) => {
                    return (<Classroom classroom={cr} key={i} />)
                })}

                <CreateClassForm createClass={createClass} setFormName={setFormName} setFormStudents={setFormStudents} />
            </main>

            <footer>
            </footer>
        </div>
    )
}

export default TeacherHome

const Classroom = ({classroom}) => {
    return (
        <Link href={"/teacher/class/"+classroom.code}>
            <div className="py-2 px-2 border-b-2 hover:bg-gray-100 cursor-pointer">
                <p className="text-lg font-semibold">{classroom.name}</p>
                <p className="text-gray-500">Code: {classroom.code}</p>
            </div>
        </Link>
    )
}

const CreateClassForm = ({ createClass, setFormName, setFormStudents }) => {
    return (
        <div className="mt-12 px-4 py-4 bg-gray-100 max-w-min">
            <h2 className="text-xl mb-4">Create New Class</h2>
            <label>
                <p>Name:</p>
                <input className="border-2 rounded" type="text" name="class_name" onChange={e => setFormName(e.target.value)} />
            </label>
            <label>
                <p className="mt-2">No. of Students:</p>
                <input className="border-2 rounded" type="number" min="1" name="number_of_students" onChange={e => setFormStudents(e.target.value)} />
            </label><br />
            <button className="mt-4 py-1 px-2 bg-gray-500 text-white rounded" onClick={createClass}>Create</button>
        </div>
    )
}
